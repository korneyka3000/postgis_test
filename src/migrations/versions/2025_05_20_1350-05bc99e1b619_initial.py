"""initial

Revision ID: 05bc99e1b619
Revises: 
Create Date: 2025-05-20 13:50:05.288574

"""
from collections.abc import Sequence

import geoalchemy2
import sqlalchemy as sa

from alembic import op


# revision identifiers, used by Alembic.
revision: str = '05bc99e1b619'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity',
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['activity.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_geospatial_table('building',
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('geo_location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_building_geo_location', 'building', ['geo_location'], unique=False, postgresql_using='gist', postgresql_ops={})
    op.create_table('organization',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('building_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['building.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization_activity',
    sa.Column('activity_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('activity_id', 'organization_id')
    )
    op.create_table('phone_number',
    sa.Column('value', sa.VARCHAR(length=20), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('value')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('phone_number')
    op.drop_table('organization_activity')
    op.drop_table('organization')
    op.drop_geospatial_index('idx_building_geo_location', table_name='building', postgresql_using='gist', column_name='geo_location')
    op.drop_geospatial_table('building')
    op.drop_table('activity')
    # ### end Alembic commands ###
